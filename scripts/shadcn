#!/bin/bash
: "
A handy script for dynamically importing components from ShadCN
in both Next.js and Remix applications
"

function shadcn_importer(){
  # Ensures at leas two args are passed.
  if [ "$#" -lt 2 ]; then
      echo >&2 "Error: Requires at least two arguments."
      exit 1
  fi

  # Ensures pnpm is installed.
  if ! [ -x "$(command -v pnpm)" ]; then
    echo >&2 "Error: pnpm is not installed."
    exit 1
  fi

  # Ensures fd is installed.
  if ! [ -x "$(command -v fd)" ]; then
    echo >&2 "Error: fd is not installed."
    exit 1
  fi

  # Ensures ripgrep is installed.
  if ! [ -x "$(command -v rg)" ]; then
    echo >&2 "Error: ripgrep is not installed."
    exit 1
  fi

  # Ensures root does exist.
  if [ -z "$ROOT" ]; then
    echo >&2 "Failed to get root directory."
    exit 1
  fi


  package_json="$ROOT/package.json"

  # Check if package.json exists
  if [ -f "$package_json" ]; then
      # Set components address based on whether Remix is present in
      # package.json
      if rg -q remix "$package_json"; then
          components_address="$ROOT/app/components/ui"
      else
          components_address="$ROOT/components/ui"
      fi
  else
      echo >&2 "Error: package.json not found in $ROOT."
      exit 1
  fi


  # Run the specified command using pnpx shadcn@latest
  pnpx shadcn@latest "$@" || {
      echo >&2 "Error: Failed to run shadcn@latest."
      exit 1
  }


  cd "$components_address" ||
    (echo >&2 "Failed to change to directory $components_address." &&
    exit 1)


  index_address="$components_address/index.ts"

  # Automatically appends each new component to index.ts upon addition.
  content=$(fd .tsx --exec echo 'export * from "{}";' | sed 's/.tsx//g')
  echo "$content" > "$index_address"

}


if [[ "$1" == "add" ]]; then
  # Executes only when the 'add' command is specified.
  shadcn_importer "$@"
else
  # For all other commands, the default behavior is used.
  pnpx shadcn@latest "$@"
fi
