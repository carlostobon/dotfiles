#!/bin/sh
#
# =============================
# Shortcuts for QwikJS
# =============================
#
#
qwikinit(){
  target=$1
  pnpm create qwik@latest empty $target
  c $target
  pnpm install &

  #c "src/"
  touch "src/components/index.ts"
  # This lines insert font to root.tsx
  echo "--- Editing root.tsx..."

  echo 'import { component$ } from "@builder.io/qwik";
import {
  QwikCityProvider,
  RouterOutlet,
  ServiceWorkerRegister,
} from "@builder.io/qwik-city";
import { RouterHead } from "./components/router-head/router-head";

import "./global.css";

export default component$(() => {
  return (
    <QwikCityProvider>
      <head>
        <meta charSet="utf-8" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="anonymous" />
        <link href="https://fonts.googleapis.com/css2?family=Comic+Neue:wght@300;400;700&display=swap" rel="stylesheet" />
        <link rel="manifest" href="/manifest.json" />
        <RouterHead />
      </head>
      <body lang="en">
        <RouterOutlet />
        <ServiceWorkerRegister />
      </body>
    </QwikCityProvider>
  );
});
' > "src/root.tsx" &


  echo "--- Editing global.css..."

  echo "
:root {
  --main-font-family: 'Comic Neue', cursive;
  --main-font-size: 2rem;
  --container: 1220px;
}

html {
    font-size: 62.5%;
    scroll-behavior: smooth;
}

body {
  font-size: var(--main-font-size);
  font-family: var(--main-font-family);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    user-select: none;
}

a {
    text-decoration: none;
    display: inline-block;
}

img {
    max-width: 100%;
    display: block;
}

button {
  border: none;
  background: none;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
}

.container {
  max-width: var(--container);
  margin: 0 auto;
  padding: 0 5rem;
}
  " > "src/global.css" &

  echo 'import { component$ } from "@builder.io/qwik";

export default component$(() => {
  return (
    <div class="container">
      <h1 style={{ textAlign: "center", marginTop: "5rem" }}>
        ... Qwik Running ðŸš€
      </h1>
    </div>
  );
});
  ' > "src/routes/index.tsx" &

  wait
  clear
  vim "src/routes/index.tsx"
}


qwikmc(){
	directory=$1
	mkdir $directory
  capitalized=$(remove_hyphen_and_capitalize $directory)
  echo "export { default as $capitalized } from './$directory/$directory';" >> "index.ts"

	c $directory
	touch "${directory}.tsx"
	touch "${directory}.css"
	echo "import { component$, useStylesScoped$ } from '@builder.io/qwik';
import styles from './${directory}.css?inline';

export default component\$(() => {
	useStylesScoped\$(styles);

	return (
		<div>
		</div>
		)
	}
) " > "${directory}.tsx"
	vim "${directory}.tsx"
}

qwikmr(){
	directory=$1
	mkdir -p $directory
	c $directory
	touch "index.tsx"
	touch "index.css"
	echo "import { component$, useStylesScoped$ } from '@builder.io/qwik';
import styles from './index.css?inline';

export default component\$(() => {
	useStylesScoped\$(styles);

	return (
		<>
		</>
		)
	}
) " > "index.tsx"
  vim "index.tsx"
}


remove_hyphen_and_capitalize() {
  input=$1
  IFS="-" read -ra words <<< "$input"

  output=()
  for word in "${words[@]}"; do
    output+="${word^}"
  done

  echo $output
}
